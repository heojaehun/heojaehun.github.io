<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Python on 작업실📦상자</title>
    <link>https://heojaehun.github.com/tags/python/</link>
    <description>Recent content in Python on 작업실📦상자</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Jaehun Heo (CC BY 4.0)</copyright>
    <lastBuildDate>Fri, 18 Dec 2020 23:53:41 +0900</lastBuildDate><atom:link href="https://heojaehun.github.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[TIL] 201218</title>
      <link>https://heojaehun.github.com/blog/til_201218/</link>
      <pubDate>Fri, 18 Dec 2020 23:53:41 +0900</pubDate>
      
      <guid>https://heojaehun.github.com/blog/til_201218/</guid>
      <description>[책] 개발자의 글쓰기 (p.220 ~ p.253) 고객의 요구사항은 변할 수밖에 없다. 고객은 자기가 원하는 제품이 정확히 뭔지 모른다. 개발자는 고객에게서 요구사항을 받아 분석하는 게 아니다. 개발자가 요구사항을 제시해서 고객이 선택하게 해야 한다. 고객의 요구사항은 끊임없이 변할 수밖에 없고 개발자는 이에 대응할 수 있어야 한다. 요구사항을 구현하고 나면 가능한 한 곧바로 고객에게 검수받아야 한다. 그래야 고객의 변덕을 줄일 수 있다. 분석-설계-구현-테스트-검수 구현 직전 고객의 요구사항을 점검하고 개발이 끝나면 곧바로 검수받는다. 고객의 만족도 높이기 고객의 요구사항에도 급이 있다.</description>
      <content:encoded><![CDATA[<h2 id="책-개발자의-글쓰기-p220--p253">[책] 개발자의 글쓰기 (p.220 ~ p.253)</h2>
<h3 id="고객의-요구사항은-변할-수밖에-없다">고객의 요구사항은 변할 수밖에 없다.</h3>
<ul>
<li>고객은 자기가 원하는 제품이 정확히 뭔지 모른다.</li>
<li>개발자는 고객에게서 요구사항을 받아 분석하는 게 아니다.</li>
<li>개발자가 요구사항을 제시해서 고객이 선택하게 해야 한다.</li>
<li>고객의 요구사항은 끊임없이 변할 수밖에 없고 개발자는 이에 대응할 수 있어야 한다.</li>
<li>요구사항을 구현하고 나면 가능한 한 곧바로 고객에게 검수받아야 한다.</li>
<li>그래야 고객의 변덕을 줄일 수 있다.</li>
<li>분석-설계-구현-테스트-검수</li>
<li>구현 직전 고객의 요구사항을 점검하고 개발이 끝나면 곧바로 검수받는다.</li>
</ul>
<h3 id="고객의-만족도-높이기">고객의 만족도 높이기</h3>
<ul>
<li>고객의 요구사항에도 급이 있다.</li>
<li>가장 급이 높은 요구사항부터 개발하는 것이 고객 만족도를 높이는 데 좋다.</li>
</ul>
<h4 id="카노-모델">카노 모델</h4>
<ul>
<li>기본 기능은 모든 요구를 충족시켜도 추가되는 만족도가 없다.</li>
<li>기능의 성능은 요구를 충족시키는 만큼 만족도가 오른다.</li>
<li>기대하지 않았던 특별한 기능은 충족하지 못해도 불만족스럽지 않으며, 만약 충족하면 크게 만족한다.</li>
</ul>
<h3 id="기술-블로그-쉽게-쓰는-방법">기술 블로그 쉽게 쓰는 방법</h3>
<ul>
<li>학교에서 썼던 글과 기술 블로그에 쓰는 글은 다르다.
<ul>
<li>기술 블로그에 쓰는 글은 설명문이나 논설문이 아니다.</li>
</ul>
</li>
<li>있는 그대로를 담담하게 풀어쓰는 글이다.</li>
<li>독자의 수준 폭도 넓어서 모두를 만족시키는 글을 쓰기란 불가능하다.</li>
<li>소재 우선 글쓰기
<ul>
<li>그저 일어난 일을 적는다.</li>
<li>일상을 다룬 수필이나 에피소드에 가깝다.</li>
</ul>
</li>
<li>자기 수준 글쓰기
<ul>
<li>쉽게 설명하기 위해서 비유법을 쓰는데, 비유법은 개념을 이해하는 데 한계가 있다.</li>
<li>전문 용어를 굳이 설명하려 하지 않아도 된다. 필요하다면 설명된 페이지를 링크 걸어놓자.</li>
<li>개발자 자신이 쓰려는 글의 본질에 집중해야 한다.</li>
</ul>
</li>
<li>재미있는 글쓰기
<ul>
<li>위키피디아보다 나무위키가 읽는 재미가 있다.</li>
<li>좋은 기술 블로그는 개발자의 경험에서 우러나오는 내용을 적절한 글쓰기 기교로 녹여낸 것이다.</li>
</ul>
</li>
</ul>
<h3 id="기술-블로그의-4종류">기술 블로그의 4종류</h3>
<ul>
<li>저: 직접 경험하고 실험한 과정이나 결과</li>
<li>술: 어떤 것을 분석하여 의미를 풀이하고 해석한 것</li>
<li>편: 산만하고 복잡한 자료를 풀이하고 해석한 것</li>
<li>집: 여러 사람의 견해나 흩어진 자료를 한데 모아 정리한 것</li>
</ul>
<h4 id="개발기는-목차를-잘-잡고-본문부터-쓰기">개발기는 목차를 잘 잡고 본문부터 쓰기</h4>
<ul>
<li>목차는 1차원 단방향이지만 개발자의 개발 경험은 2차원이라 풀어쓰기 쉽지 않다.</li>
<li>성공한 방법을 우선 쓰고, 필요하다면 실패 경험을 뒤에 서술한다.</li>
<li>네이버 기술 블로그를 참고하면 좋다.</li>
<li>글은 본문부터 쓰는 게 쉽다. 머리말은 다 쓰고 난 뒤, 글을 올릴 때 생각나는 대로 간단히 쓴다.</li>
</ul>
<h4 id="원전을-비교하고-실험해-풀이해서-쓰기">원전을 비교하고 실험해 풀이해서 쓰기</h4>
<ul>
<li>&lsquo;술&rsquo;에 해당하는 글
<ul>
<li>새로운 기술을 자세하게 또는 비유해 설명한 것</li>
<li>비슷한 용어를 비교해 풀이한 것</li>
<li>에러 해결 방법 등</li>
</ul>
</li>
<li>원전의 내용을 가지고 비교 분석하는 글이 대표적이다.</li>
<li>개발자가 경전을 쓰는 게 아니라 자기 방식대로 풀이하는 글이다.</li>
</ul>
<h2 id="python-이것저것">[Python] 이것저것</h2>
<h3 id="파일이나-디렉터리-존재-유무-확인">파일이나 디렉터리 존재 유무 확인</h3>
<p><code>os</code> 모듈에 포함된 <code>access()</code> 함수를 이용한다.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">1</span><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl">
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="n">os</span><span class="o">.</span><span class="n">access</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">mode</span><span class="p">)</span></span></span></code></pre></div><p>여기서 mode 플래그에는 네 가지 값이 올 수 있다.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">1</span><span class="cl"><span class="n">os</span><span class="o">.</span><span class="n">F_OK</span>		<span class="c1"># path 존재 여부</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="n">os</span><span class="o">.</span><span class="n">R_OK</span>		<span class="c1"># 읽기 가능 여부</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="n">os</span><span class="o">.</span><span class="n">W_OK</span>		<span class="c1"># 쓰기 가능 여부</span>
</span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="n">os</span><span class="o">.</span><span class="n">X_OK</span>		<span class="c1"># 실행 가능 여부</span></span></span></code></pre></div><p>파일 존재 유무를 확인 하기위해 <code>os.F_OK</code>를 사용하였다.</p>
<h3 id="파일-이동">파일 이동</h3>
<p><code>os</code> 모듈에 포함된 <code>rename()</code> 함수를 이용한다.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">1</span><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl">
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="n">os</span><span class="o">.</span><span class="n">rename</span><span class="p">(</span><span class="n">src</span><span class="p">,</span> <span class="n">dst</span><span class="p">)</span></span></span></code></pre></div><p>혹은 <code>shutil</code> 모듈에 포함된 <code>move()</code> 함수를 이용한다. <code>shutil</code> 패키지는 파이썬 기본 모듈이다.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">1</span><span class="cl"><span class="kn">import</span> <span class="nn">shutil</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl">
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="n">shutil</span><span class="o">.</span><span class="n">move</span><span class="p">(</span><span class="n">src</span><span class="p">,</span> <span class="n">dst</span><span class="p">)</span></span></span></code></pre></div><p><code>shutil</code>이 뭔가 찾아봤더니 파일 복사와 삭제 등을 지원하는 함수가 포함된 &lsquo;고수준 파일 연산&rsquo; 모듈이라고 한다. <a href="https://docs.python.org/ko/3/library/shutil.html#module-shutil">링크</a></p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>